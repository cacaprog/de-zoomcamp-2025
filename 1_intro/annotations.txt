python ingest_data.py \
    --user admin \
    --password mysecretpass \
    --host localhost \
    --port 5432 \
    --db ny_taxi \
    --tb=yellow_taxi_trips \
    --url= https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2021-01.csv


docker run -it \
    --network=pg-network \
    taxi_ingest:v001 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --tb=yellow_taxi_trips \
    --url="https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2021-01.csv"
    
# https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet

#  https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2021-01.csv"




URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet"

python ingest_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --tb=yellow_taxi_trips \
  --url=${URL}



# postgres container
  docker run -it \
    -e POSTGRES_USER="user" \
    -e POSTGRES_PASSWORD="mysecretpass" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/data:/var/lib/postgresql/14/data \
    -p 5432:5432 \
    --network=pg-network \
    --name pg-database-3 \
    postgres:14

# test ingest python local
python ingest_data.py \
    --user admin \
    --password mysecretpass \
    --host localhost \
    --port 5432 \
    --db ny_taxi \
    --tb yellow_taxi_trips \
    --url "https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

# ingesting data to postgres container
    python ingest_data.py \
    --user admin \
    --password mysecretpass \
    --host localhost \
    --port 5433 \
    --db ny_taxi \
    --tb yellow_taxi_trips \
    --url "https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-10.csv.gz
------------------

# Homework - etapas
Etapas para conclusão do exercício
1. Download dos arquivos para explorar no jupyter notebook
2. Alterar o formato dos dados (object -> datetime)
3. Postgres no docker container
4. criar network
5. Pgadmin 4 no docker container
6. Teste com os dados
7. criar e rodar o docker-compose
8. realizar a ingestão pelo ingest_data.py
9. realizar as queries para o exercícios

---

# Teste local

# postgres homework container
docker run -it \
-e POSTGRES_USER="user" \
-e POSTGRES_PASSWORD="mysecretpass" \
-e POSTGRES_DB="ny_green_taxi" \
-v $(pwd)/data:/var/lib/postgresql/14/data \
-p 5433:5432 \
--network=pg-network \
--name pg-database-hw \
postgres:14

# create network
docker network create pg-network

# pgadmin container
docker run -it \
    -p 5050:80 \
    --network=pg-network \
    --name pgadmin \
    -e "PGADMIN_DEFAULT_EMAIL=admin@admin.com" \
    -e "PGADMIN_DEFAULT_PASSWORD=admin" \
    dpage/pgadmin4

# Acessar o pgadmin no navegador
Abrir navegador: http://localhost:8080

Connect to the PostgreSQL Server

    Add a New Server:
        Click on the "Add New Server" button (or right-click on "Servers" in the navigation panel and select "Create > Server").

    Configure the Server Connection:

        In the General tab:
            Name: Any name, e.g., TaxiDB.

        In the Connection tab:
            Host name/address: taxidb (this matches the service name defined in your docker-compose.yml file).
            Port: 5432 (the default PostgreSQL port inside the container).
            Maintenance database: ny_green_taxi (your POSTGRES_DB).
            Username: user (your POSTGRES_USER).
            Password: mysecretpass (your POSTGRES_PASSWORD).

    Save the Server:
        Click Save to connect to the database.

# Containeres ativos
[imagem docker ps]
```bash
(base) root@CairoPC:~# docker ps
CONTAINER ID   IMAGE            COMMAND                  CREATED          STATUS          PORTS                                            NAMES
8185b201b688   dpage/pgadmin4   "/entrypoint.sh"         32 minutes ago   Up 32 minutes   443/tcp, 0.0.0.0:5050->80/tcp, :::5050->80/tcp   pgadmin
d6c1a9d50647   postgres:14      "docker-entrypoint.s…"   52 minutes ago   Up 52 minutes   0.0.0.0:5433->5432/tcp, :::5433->5432/tcp        pg-database
```

Homework usando o docker-compose
# Iniciar os containeres (postgres e pgadmin4)
```bash
docker-compose up -d
```

# ingesting data to postgres container
    python ingest_data.py \
    --user user \
    --password mysecretpass \
    --host localhost \
    --port 5433 \
    --db ny_green_taxi \
    --table_name_1 green_taxi \
    --table_name_2 zones  


taxI-dataset =  "https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-10.csv.gz"
zones = "https://github.com/DataTalksClub/nyc-tlc-data/releases/download/misc/taxi_zone_lookup.csv"


